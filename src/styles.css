/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --explitaeditor-color-red-100: oklch(93.6% 0.032 17.717);
    --explitaeditor-color-red-200: oklch(88.5% 0.062 18.334);
    --explitaeditor-color-red-400: oklch(70.4% 0.191 22.216);
    --explitaeditor-color-red-500: oklch(63.7% 0.237 25.331);
    --explitaeditor-color-red-900: oklch(39.6% 0.141 25.723);
    --explitaeditor-color-blue-400: oklch(70.7% 0.165 254.624);
    --explitaeditor-color-blue-600: oklch(54.6% 0.245 262.881);
    --explitaeditor-color-slate-100: oklch(96.8% 0.007 247.896);
    --explitaeditor-color-slate-300: oklch(86.9% 0.022 252.894);
    --explitaeditor-color-slate-700: oklch(37.2% 0.044 257.287);
    --explitaeditor-color-gray-100: oklch(96.7% 0.003 264.542);
    --explitaeditor-color-gray-200: oklch(92.8% 0.006 264.531);
    --explitaeditor-color-gray-300: oklch(87.2% 0.01 258.338);
    --explitaeditor-color-gray-600: oklch(44.6% 0.03 256.802);
    --explitaeditor-color-gray-700: oklch(37.3% 0.034 259.733);
    --explitaeditor-color-neutral-200: oklch(92.2% 0 0);
    --explitaeditor-color-neutral-300: oklch(87% 0 0);
    --explitaeditor-color-neutral-400: oklch(70.8% 0 0);
    --explitaeditor-color-neutral-500: oklch(55.6% 0 0);
    --explitaeditor-color-neutral-700: oklch(37.1% 0 0);
    --explitaeditor-color-stone-200: oklch(92.3% 0.003 48.717);
    --explitaeditor-color-black: #000;
    --explitaeditor-color-white: #fff;
    --explitaeditor-spacing: 0.25rem;
    --explitaeditor-container-lg: 32rem;
    --explitaeditor-text-xs: 0.75rem;
    --explitaeditor-text-xs--line-height: calc(1 / 0.75);
    --explitaeditor-text-sm: 0.875rem;
    --explitaeditor-text-sm--line-height: calc(1.25 / 0.875);
    --explitaeditor-text-base: 1rem;
    --explitaeditor-text-base--line-height: calc(1.5 / 1);
    --explitaeditor-text-lg: 1.125rem;
    --explitaeditor-text-lg--line-height: calc(1.75 / 1.125);
    --explitaeditor-font-weight-normal: 400;
    --explitaeditor-font-weight-medium: 500;
    --explitaeditor-font-weight-semibold: 600;
    --explitaeditor-tracking-tight: -0.025em;
    --explitaeditor-ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --explitaeditor-animate-spin: spin 1s linear infinite;
    --explitaeditor-default-transition-duration: 150ms;
    --explitaeditor-default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --explitaeditor-default-font-family: var(--font-geist-sans);
    --explitaeditor-default-mono-font-family: var(--font-geist-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--explitaeditor-default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--explitaeditor-default-font-feature-settings, normal);
    font-variation-settings: var(--explitaeditor-default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--explitaeditor-default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--explitaeditor-default-mono-font-feature-settings, normal);
    font-variation-settings: var(--explitaeditor-default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .explitaeditor\:absolute {
    position: absolute;
  }
  .explitaeditor\:fixed {
    position: fixed;
  }
  .explitaeditor\:relative {
    position: relative;
  }
  .explitaeditor\:inset-0 {
    inset: calc(var(--explitaeditor-spacing) * 0);
  }
  .explitaeditor\:inset-x-0 {
    inset-inline: calc(var(--explitaeditor-spacing) * 0);
  }
  .explitaeditor\:inset-y-0 {
    inset-block: calc(var(--explitaeditor-spacing) * 0);
  }
  .explitaeditor\:top-0 {
    top: calc(var(--explitaeditor-spacing) * 0);
  }
  .explitaeditor\:top-4 {
    top: calc(var(--explitaeditor-spacing) * 4);
  }
  .explitaeditor\:top-\[50\%\] {
    top: 50%;
  }
  .explitaeditor\:right-0 {
    right: calc(var(--explitaeditor-spacing) * 0);
  }
  .explitaeditor\:right-4 {
    right: calc(var(--explitaeditor-spacing) * 4);
  }
  .explitaeditor\:bottom-0 {
    bottom: calc(var(--explitaeditor-spacing) * 0);
  }
  .explitaeditor\:left-0 {
    left: calc(var(--explitaeditor-spacing) * 0);
  }
  .explitaeditor\:left-\[50\%\] {
    left: 50%;
  }
  .explitaeditor\:z-50 {
    z-index: 50;
  }
  .explitaeditor\:m-2 {
    margin: calc(var(--explitaeditor-spacing) * 2);
  }
  .explitaeditor\:flex {
    display: flex;
  }
  .explitaeditor\:grid {
    display: grid;
  }
  .explitaeditor\:inline-flex {
    display: inline-flex;
  }
  .explitaeditor\:size-5 {
    width: calc(var(--explitaeditor-spacing) * 5);
    height: calc(var(--explitaeditor-spacing) * 5);
  }
  .explitaeditor\:h-4 {
    height: calc(var(--explitaeditor-spacing) * 4);
  }
  .explitaeditor\:h-6 {
    height: calc(var(--explitaeditor-spacing) * 6);
  }
  .explitaeditor\:h-8 {
    height: calc(var(--explitaeditor-spacing) * 8);
  }
  .explitaeditor\:h-9 {
    height: calc(var(--explitaeditor-spacing) * 9);
  }
  .explitaeditor\:h-10 {
    height: calc(var(--explitaeditor-spacing) * 10);
  }
  .explitaeditor\:h-14 {
    height: calc(var(--explitaeditor-spacing) * 14);
  }
  .explitaeditor\:h-full {
    height: 100%;
  }
  .explitaeditor\:w-3\/4 {
    width: calc(3/4 * 100%);
  }
  .explitaeditor\:w-4 {
    width: calc(var(--explitaeditor-spacing) * 4);
  }
  .explitaeditor\:w-9 {
    width: calc(var(--explitaeditor-spacing) * 9);
  }
  .explitaeditor\:w-full {
    width: 100%;
  }
  .explitaeditor\:max-w-lg {
    max-width: var(--explitaeditor-container-lg);
  }
  .explitaeditor\:shrink-0 {
    flex-shrink: 0;
  }
  .explitaeditor\:translate-x-\[-50\%\] {
    --tw-translate-x: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .explitaeditor\:translate-y-\[-50\%\] {
    --tw-translate-y: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .explitaeditor\:cursor-default {
    cursor: default;
  }
  .explitaeditor\:cursor-pointer {
    cursor: pointer;
  }
  .explitaeditor\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .explitaeditor\:grid-cols-8 {
    grid-template-columns: repeat(8, minmax(0, 1fr));
  }
  .explitaeditor\:flex-col {
    flex-direction: column;
  }
  .explitaeditor\:flex-col-reverse {
    flex-direction: column-reverse;
  }
  .explitaeditor\:flex-wrap {
    flex-wrap: wrap;
  }
  .explitaeditor\:items-center {
    align-items: center;
  }
  .explitaeditor\:justify-center {
    justify-content: center;
  }
  .explitaeditor\:gap-0 {
    gap: calc(var(--explitaeditor-spacing) * 0);
  }
  .explitaeditor\:gap-2 {
    gap: calc(var(--explitaeditor-spacing) * 2);
  }
  .explitaeditor\:gap-4 {
    gap: calc(var(--explitaeditor-spacing) * 4);
  }
  .explitaeditor\:space-y-1\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--explitaeditor-spacing) * 1.5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--explitaeditor-spacing) * 1.5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .explitaeditor\:space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--explitaeditor-spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--explitaeditor-spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .explitaeditor\:gap-x-2 {
    column-gap: calc(var(--explitaeditor-spacing) * 2);
  }
  .explitaeditor\:overflow-hidden {
    overflow: hidden;
  }
  .explitaeditor\:rounded-md {
    border-radius: calc(var(--radius) - 2px);
  }
  .explitaeditor\:rounded-sm {
    border-radius: calc(var(--radius) - 4px);
  }
  .explitaeditor\:border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .explitaeditor\:border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .explitaeditor\:border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .explitaeditor\:border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .explitaeditor\:border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .explitaeditor\:border-\[\#C7C7C7\] {
    border-color: #C7C7C7;
  }
  .explitaeditor\:border-blue-400 {
    border-color: var(--explitaeditor-color-blue-400);
  }
  .explitaeditor\:border-gray-200 {
    border-color: var(--explitaeditor-color-gray-200);
  }
  .explitaeditor\:bg-background {
    background-color: var(--background);
  }
  .explitaeditor\:bg-black\/0 {
    background-color: var(--explitaeditor-color-black);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--explitaeditor-color-black) 0%, transparent);
    }
  }
  .explitaeditor\:bg-destructive {
    background-color: var(--destructive);
  }
  .explitaeditor\:bg-neutral-200 {
    background-color: var(--explitaeditor-color-neutral-200);
  }
  .explitaeditor\:bg-red-100 {
    background-color: var(--explitaeditor-color-red-100);
  }
  .explitaeditor\:bg-secondary {
    background-color: var(--secondary);
  }
  .explitaeditor\:bg-transparent {
    background-color: transparent;
  }
  .explitaeditor\:bg-white {
    background-color: var(--explitaeditor-color-white);
  }
  .explitaeditor\:\!p-2 {
    padding: calc(var(--explitaeditor-spacing) * 2) !important;
  }
  .explitaeditor\:p-0 {
    padding: calc(var(--explitaeditor-spacing) * 0);
  }
  .explitaeditor\:p-2\.5 {
    padding: calc(var(--explitaeditor-spacing) * 2.5);
  }
  .explitaeditor\:p-3 {
    padding: calc(var(--explitaeditor-spacing) * 3);
  }
  .explitaeditor\:p-6 {
    padding: calc(var(--explitaeditor-spacing) * 6);
  }
  .explitaeditor\:px-1\.5 {
    padding-inline: calc(var(--explitaeditor-spacing) * 1.5);
  }
  .explitaeditor\:px-2 {
    padding-inline: calc(var(--explitaeditor-spacing) * 2);
  }
  .explitaeditor\:px-3 {
    padding-inline: calc(var(--explitaeditor-spacing) * 3);
  }
  .explitaeditor\:px-4 {
    padding-inline: calc(var(--explitaeditor-spacing) * 4);
  }
  .explitaeditor\:px-8 {
    padding-inline: calc(var(--explitaeditor-spacing) * 8);
  }
  .explitaeditor\:py-1 {
    padding-block: calc(var(--explitaeditor-spacing) * 1);
  }
  .explitaeditor\:py-1\.5 {
    padding-block: calc(var(--explitaeditor-spacing) * 1.5);
  }
  .explitaeditor\:py-2 {
    padding-block: calc(var(--explitaeditor-spacing) * 2);
  }
  .explitaeditor\:pl-8 {
    padding-left: calc(var(--explitaeditor-spacing) * 8);
  }
  .explitaeditor\:text-center {
    text-align: center;
  }
  .explitaeditor\:text-base {
    font-size: var(--explitaeditor-text-base);
    line-height: var(--tw-leading, var(--explitaeditor-text-base--line-height));
  }
  .explitaeditor\:text-lg {
    font-size: var(--explitaeditor-text-lg);
    line-height: var(--tw-leading, var(--explitaeditor-text-lg--line-height));
  }
  .explitaeditor\:text-sm {
    font-size: var(--explitaeditor-text-sm);
    line-height: var(--tw-leading, var(--explitaeditor-text-sm--line-height));
  }
  .explitaeditor\:text-xs {
    font-size: var(--explitaeditor-text-xs);
    line-height: var(--tw-leading, var(--explitaeditor-text-xs--line-height));
  }
  .explitaeditor\:leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .explitaeditor\:font-medium {
    --tw-font-weight: var(--explitaeditor-font-weight-medium);
    font-weight: var(--explitaeditor-font-weight-medium);
  }
  .explitaeditor\:font-semibold {
    --tw-font-weight: var(--explitaeditor-font-weight-semibold);
    font-weight: var(--explitaeditor-font-weight-semibold);
  }
  .explitaeditor\:tracking-tight {
    --tw-tracking: var(--explitaeditor-tracking-tight);
    letter-spacing: var(--explitaeditor-tracking-tight);
  }
  .explitaeditor\:whitespace-nowrap {
    white-space: nowrap;
  }
  .explitaeditor\:\!text-red-400 {
    color: var(--explitaeditor-color-red-400) !important;
  }
  .explitaeditor\:\!text-red-500 {
    color: var(--explitaeditor-color-red-500) !important;
  }
  .explitaeditor\:text-black {
    color: var(--explitaeditor-color-black);
  }
  .explitaeditor\:text-gray-700 {
    color: var(--explitaeditor-color-gray-700);
  }
  .explitaeditor\:text-neutral-700 {
    color: var(--explitaeditor-color-neutral-700);
  }
  .explitaeditor\:text-primary {
    color: var(--primary);
  }
  .explitaeditor\:text-secondary-foreground {
    color: var(--secondary-foreground);
  }
  .explitaeditor\:underline-offset-4 {
    text-underline-offset: 4px;
  }
  .explitaeditor\:opacity-70 {
    opacity: 70%;
  }
  .explitaeditor\:shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .explitaeditor\:shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .explitaeditor\:shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .explitaeditor\:ring-offset-background {
    --tw-ring-offset-color: var(--background);
  }
  .explitaeditor\:transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--explitaeditor-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--explitaeditor-default-transition-duration));
  }
  .explitaeditor\:transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--explitaeditor-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--explitaeditor-default-transition-duration));
  }
  .explitaeditor\:transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--explitaeditor-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--explitaeditor-default-transition-duration));
  }
  .explitaeditor\:duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .explitaeditor\:ease-in-out {
    --tw-ease: var(--explitaeditor-ease-in-out);
    transition-timing-function: var(--explitaeditor-ease-in-out);
  }
  .explitaeditor\:outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .explitaeditor\:select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .explitaeditor\:file\:border-0 {
    &::file-selector-button {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .explitaeditor\:file\:bg-transparent {
    &::file-selector-button {
      background-color: transparent;
    }
  }
  .explitaeditor\:file\:text-sm {
    &::file-selector-button {
      font-size: var(--explitaeditor-text-sm);
      line-height: var(--tw-leading, var(--explitaeditor-text-sm--line-height));
    }
  }
  .explitaeditor\:file\:font-medium {
    &::file-selector-button {
      --tw-font-weight: var(--explitaeditor-font-weight-medium);
      font-weight: var(--explitaeditor-font-weight-medium);
    }
  }
  .explitaeditor\:file\:text-neutral-700 {
    &::file-selector-button {
      color: var(--explitaeditor-color-neutral-700);
    }
  }
  .explitaeditor\:placeholder\:text-neutral-500 {
    &::placeholder {
      color: var(--explitaeditor-color-neutral-500);
    }
  }
  .explitaeditor\:hover\:\!bg-red-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--explitaeditor-color-red-100) !important;
      }
    }
  }
  .explitaeditor\:hover\:\!bg-red-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--explitaeditor-color-red-200) !important;
      }
    }
  }
  .explitaeditor\:hover\:bg-accent {
    &:hover {
      @media (hover: hover) {
        background-color: var(--accent);
      }
    }
  }
  .explitaeditor\:hover\:bg-destructive\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
        }
      }
    }
  }
  .explitaeditor\:hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--explitaeditor-color-gray-100);
      }
    }
  }
  .explitaeditor\:hover\:bg-neutral-200\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--explitaeditor-color-neutral-200);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--explitaeditor-color-neutral-200) 80%, transparent);
        }
      }
    }
  }
  .explitaeditor\:hover\:bg-secondary\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--secondary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
        }
      }
    }
  }
  .explitaeditor\:hover\:\!text-red-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--explitaeditor-color-red-900) !important;
      }
    }
  }
  .explitaeditor\:hover\:text-accent-foreground {
    &:hover {
      @media (hover: hover) {
        color: var(--accent-foreground);
      }
    }
  }
  .explitaeditor\:hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .explitaeditor\:hover\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .explitaeditor\:focus\:bg-accent {
    &:focus {
      background-color: var(--accent);
    }
  }
  .explitaeditor\:focus\:text-accent-foreground {
    &:focus {
      color: var(--accent-foreground);
    }
  }
  .explitaeditor\:focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .explitaeditor\:focus\:ring-ring {
    &:focus {
      --tw-ring-color: var(--ring);
    }
  }
  .explitaeditor\:focus\:ring-offset-2 {
    &:focus {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .explitaeditor\:focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .explitaeditor\:focus-visible\:ring-1 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .explitaeditor\:focus-visible\:ring-ring {
    &:focus-visible {
      --tw-ring-color: var(--ring);
    }
  }
  .explitaeditor\:focus-visible\:outline-none {
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .explitaeditor\:disabled\:pointer-events-none {
    &:disabled {
      pointer-events: none;
    }
  }
  .explitaeditor\:disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .explitaeditor\:disabled\:text-neutral-400 {
    &:disabled {
      color: var(--explitaeditor-color-neutral-400);
    }
  }
  .explitaeditor\:disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .explitaeditor\:data-\[disabled\]\:pointer-events-none {
    &[data-disabled] {
      pointer-events: none;
    }
  }
  .explitaeditor\:data-\[disabled\]\:opacity-50 {
    &[data-disabled] {
      opacity: 50%;
    }
  }
  .explitaeditor\:data-\[state\=closed\]\:duration-300 {
    &[data-state="closed"] {
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
  }
  .explitaeditor\:data-\[state\=open\]\:bg-white {
    &[data-state="open"] {
      background-color: var(--explitaeditor-color-white);
    }
  }
  .explitaeditor\:data-\[state\=open\]\:duration-500 {
    &[data-state="open"] {
      --tw-duration: 500ms;
      transition-duration: 500ms;
    }
  }
  .explitaeditor\:sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .explitaeditor\:sm\:justify-end {
    @media (width >= 40rem) {
      justify-content: flex-end;
    }
  }
  .explitaeditor\:sm\:space-x-2 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--explitaeditor-spacing) * 2) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--explitaeditor-spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .explitaeditor\:sm\:text-left {
    @media (width >= 40rem) {
      text-align: left;
    }
  }
  .explitaeditor\:md\:text-sm {
    @media (width >= 48rem) {
      font-size: var(--explitaeditor-text-sm);
      line-height: var(--tw-leading, var(--explitaeditor-text-sm--line-height));
    }
  }
  .explitaeditor\:\[\&_svg\]\:pointer-events-none {
    & svg {
      pointer-events: none;
    }
  }
  .explitaeditor\:\[\&_svg\]\:size-4 {
    & svg {
      width: calc(var(--explitaeditor-spacing) * 4);
      height: calc(var(--explitaeditor-spacing) * 4);
    }
  }
  .explitaeditor\:\[\&_svg\]\:shrink-0 {
    & svg {
      flex-shrink: 0;
    }
  }
}
@layer utilities {
  @font-face {
    font-family: "Agency FB Bold";
    font-style: normal;
    font-weight: normal;
    src: local("Agency FB Bold"), url("./fonts/AGENCYB.woff") format("woff");
  }
}
.explita-editor {
  display: flex;
  flex-direction: column;
  background-color: #FAFBFD;
  font-family: 'Arial';
  &[data-mini="true"] {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  &[data-mini="true"] {
    border-color: #C7C7C7;
  }
}
.editor-item-active {
  background-color: var(--explitaeditor-color-neutral-200);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--explitaeditor-color-neutral-200) 80%, transparent);
  }
}
.explita-editor .editor-header .toolbar-content .separator {
  height: calc(var(--explitaeditor-spacing) * 6) !important;
  flex-shrink: 0;
  background-color: var(--explitaeditor-color-neutral-300);
}
.explita-editor .flex-center {
  display: flex;
  align-items: center;
  column-gap: calc(var(--explitaeditor-spacing) * 0.5);
}
.explita-editor .editor-header {
  position: sticky;
  top: calc(var(--explitaeditor-spacing) * 0);
  right: calc(var(--explitaeditor-spacing) * 0);
  left: calc(var(--explitaeditor-spacing) * 0);
  z-index: 10;
  display: flex;
  flex-direction: column;
  background-color: var(--explitaeditor-color-white);
  padding-top: calc(var(--explitaeditor-spacing) * 0);
  color: var(--explitaeditor-color-slate-700);
  &[data-mini="true"] {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  &[data-mini="true"] {
    border-color: #C7C7C7;
  }
  @media print {
    display: none;
  }
}
.explita-editor .editor-header .toolbar-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  column-gap: calc(var(--explitaeditor-spacing) * 10);
  background-color: #F1F4F9;
}
.explita-editor .editor-header .toolbar-content {
  display: flex;
  min-height: 40px;
  align-items: center;
  column-gap: calc(var(--explitaeditor-spacing) * 0.5);
  border-radius: 0px;
  &[data-mini="false"] {
    overflow-x: auto;
  }
  &[data-mini="true"] {
    flex-wrap: wrap;
  }
  &[data-mini="true"] {
    row-gap: calc(var(--explitaeditor-spacing) * 1);
  }
  &[data-mini="true"] {
    padding: calc(var(--explitaeditor-spacing) * 1);
  }
}
.explita-editor .editor-header .toolbar-button, .tippy-box .toolbar-button {
  display: flex;
  width: calc(var(--explitaeditor-spacing) * 7);
  height: calc(var(--explitaeditor-spacing) * 7);
  flex-shrink: 0;
  cursor: pointer;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border-radius: calc(var(--radius) - 4px);
  &:hover {
    @media (hover: hover) {
      background-color: var(--explitaeditor-color-neutral-200);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--explitaeditor-color-neutral-200) 80%, transparent);
      }
    }
  }
}
.tippy-box .toolbar-button {
  width: calc(var(--explitaeditor-spacing) * 5);
  height: calc(var(--explitaeditor-spacing) * 5);
}
.tippy-box .bubble-menu {
  display: flex;
  gap: calc(var(--explitaeditor-spacing) * 2);
  border-radius: 0.25rem;
  background-color: var(--explitaeditor-color-white);
  padding: calc(var(--explitaeditor-spacing) * 1);
  --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.explita-editor .editor-header .font-size-button {
  height: calc(var(--explitaeditor-spacing) * 7);
  width: calc(var(--explitaeditor-spacing) * 10);
  cursor: text;
  border-radius: calc(var(--radius) - 4px);
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--explitaeditor-color-neutral-400);
  background-color: transparent;
  text-align: center;
  font-size: var(--explitaeditor-text-sm);
  line-height: var(--tw-leading, var(--explitaeditor-text-sm--line-height));
}
.explita-editor .editor-header .font-size-input {
  height: calc(var(--explitaeditor-spacing) * 7);
  width: calc(var(--explitaeditor-spacing) * 10);
  border-radius: calc(var(--radius) - 4px);
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--explitaeditor-color-neutral-400);
  background-color: transparent;
  text-align: center;
  font-size: var(--explitaeditor-text-sm);
  line-height: var(--tw-leading, var(--explitaeditor-text-sm--line-height));
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.explita-editor .editor-header .dropdown-trigger-button {
  display: flex;
  height: calc(var(--explitaeditor-spacing) * 7);
  width: 120px;
  flex-shrink: 0;
  cursor: pointer;
  align-items: center;
  justify-content: space-between;
  gap: calc(var(--explitaeditor-spacing) * 2);
  overflow: hidden;
  border-radius: calc(var(--radius) - 4px);
  padding-inline: calc(var(--explitaeditor-spacing) * 1.5);
  font-size: var(--explitaeditor-text-sm);
  line-height: var(--tw-leading, var(--explitaeditor-text-sm--line-height));
  &:hover {
    @media (hover: hover) {
      background-color: var(--explitaeditor-color-neutral-200);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--explitaeditor-color-neutral-200) 80%, transparent);
      }
    }
  }
}
.editor-dropdown-content {
  z-index: 50;
  display: flex;
  min-width: 8rem;
  flex-direction: column;
  row-gap: calc(var(--explitaeditor-spacing) * 1);
  overflow: hidden;
  border-radius: calc(var(--radius) - 2px);
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--explitaeditor-color-stone-200);
  background-color: var(--explitaeditor-color-white);
  padding: calc(var(--explitaeditor-spacing) * 1);
  --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.editor-dropdown-menu-button {
  display: flex;
  cursor: pointer;
  align-items: center;
  column-gap: calc(var(--explitaeditor-spacing) * 2);
  border-radius: calc(var(--radius) - 4px);
  padding-inline: calc(var(--explitaeditor-spacing) * 2);
  padding-block: calc(var(--explitaeditor-spacing) * 1);
  color: var(--explitaeditor-color-neutral-700);
  &:hover {
    @media (hover: hover) {
      background-color: var(--explitaeditor-color-neutral-200);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--explitaeditor-color-neutral-200) 80%, transparent);
      }
    }
  }
}
.editor-dropdown-menu-button span {
  font-size: var(--explitaeditor-text-sm);
  line-height: var(--tw-leading, var(--explitaeditor-text-sm--line-height));
}
.editor-keyboard-shortcuts-wrapper {
  margin-top: calc(var(--explitaeditor-spacing) * 3);
  display: flex;
  max-height: calc(100vh - 70px);
  flex-direction: column;
  row-gap: calc(var(--explitaeditor-spacing) * 1);
  :where(& > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
  :where(& > :not(:last-child)) {
    border-color: var(--explitaeditor-color-gray-200);
  }
  overflow-y: auto;
}
.editor-keyboard-shortcuts-wrapper .content {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-inline: calc(var(--explitaeditor-spacing) * 2);
  padding-block: calc(var(--explitaeditor-spacing) * 1);
  font-size: var(--explitaeditor-text-xs);
  line-height: var(--tw-leading, var(--explitaeditor-text-xs--line-height));
  color: var(--explitaeditor-color-gray-700);
}
.editor-keyboard-shortcuts-wrapper .content span:nth-child(2) {
  margin-right: calc(var(--explitaeditor-spacing) * 1);
  display: flex;
  column-gap: calc(var(--explitaeditor-spacing) * 1);
  color: var(--muted-foreground);
}
.editor-keyboard-shortcuts-wrapper .content span:nth-child(2) kbd {
  border-radius: 0.25rem;
  background-color: var(--explitaeditor-color-gray-200);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--explitaeditor-color-gray-200) 80%, transparent);
  }
  padding-inline: calc(var(--explitaeditor-spacing) * 1);
  padding-block: calc(var(--explitaeditor-spacing) * 0.5);
  &:is(:where(.explitaeditor\:group):hover *) {
    @media (hover: hover) {
      background-color: var(--explitaeditor-color-gray-200);
    }
  }
  &:is(:where(.explitaeditor\:group):hover *) {
    @media (hover: hover) {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  &:is(:where(.explitaeditor\:group):hover *) {
    @media (hover: hover) {
      --tw-shadow-color: var(--explitaeditor-color-black);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--explitaeditor-color-black) var(--tw-shadow-alpha), transparent);
      }
    }
  }
}
.explita-editor .editor-loader {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: var(--explitaeditor-color-gray-600);
  &[data-mini="false"] {
    height: calc(100vh - 70px);
  }
  &[data-mini="true"] {
    height: calc(var(--explitaeditor-spacing) * 40);
  }
}
.explita-editor .editor-loader svg {
  width: calc(var(--explitaeditor-spacing) * 8);
  height: calc(var(--explitaeditor-spacing) * 8);
  animation: var(--explitaeditor-animate-spin);
}
.explita-editor .editor-content-wrapper {
  margin-inline: auto;
  width: 100%;
  flex: 1;
  overflow-y: auto;
  &[data-mini="false"] {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--explitaeditor-spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--explitaeditor-spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  &[data-mini="false"] {
    padding-block: calc(var(--explitaeditor-spacing) * 2);
  }
  @media print {
    width: 100%;
  }
  @media print {
    min-width: calc(var(--explitaeditor-spacing) * 0);
  }
  @media print {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  @media print {
    overflow: visible;
  }
  @media print {
    padding-block: calc(var(--explitaeditor-spacing) * 0);
  }
}
.explita-editor .editor-content-wrapper .ruler-container-wrapper {
  position: relative;
  margin-inline: auto;
  display: flex;
  height: calc(var(--explitaeditor-spacing) * 6);
  align-items: flex-end;
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
  border-color: var(--explitaeditor-color-gray-300);
  -webkit-user-select: none;
  user-select: none;
  @media print {
    display: none;
  }
}
.explita-editor .editor-content-wrapper .ruler-container {
  position: relative;
  height: 100%;
  width: 100%;
}
.explita-editor .editor-content-wrapper .ruler-container .mark-10 {
  position: absolute;
  bottom: calc(var(--explitaeditor-spacing) * 0);
  height: calc(var(--explitaeditor-spacing) * 2);
  width: 1px;
  background-color: var(--explitaeditor-color-neutral-500);
}
.explita-editor .editor-content-wrapper .ruler-container .mark-5-10 {
  position: absolute;
  bottom: calc(var(--explitaeditor-spacing) * 0);
  height: calc(var(--explitaeditor-spacing) * 1.5);
  width: 1px;
  background-color: var(--explitaeditor-color-neutral-500);
}
.explita-editor .editor-content-wrapper .ruler-container .mark-5 {
  position: absolute;
  bottom: calc(var(--explitaeditor-spacing) * 0);
  height: calc(var(--explitaeditor-spacing) * 1);
  width: 1px;
  background-color: var(--explitaeditor-color-neutral-500);
}
.explita-editor .editor-content-wrapper .ruler-container .digit {
  position: absolute;
  bottom: calc(var(--explitaeditor-spacing) * 2);
  --tw-translate-x: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  font-size: 10px;
  color: var(--explitaeditor-color-neutral-500);
}
.explita-editor .editor-content {
  margin-inline: auto;
  display: flex;
  cursor: text;
  flex-direction: column;
  border-color: #C7C7C7;
  background-color: var(--explitaeditor-color-white);
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media print {
    width: 100% !important;
  }
  @media print {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
}
.explita-editor div[data-mini="false"] .editor-content {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.explita-editor .menu-trigger {
  height: auto;
  border-radius: calc(var(--radius) - 4px);
  padding-inline: 7px;
  padding-block: calc(var(--explitaeditor-spacing) * 0.5);
  font-size: var(--explitaeditor-text-sm);
  line-height: var(--tw-leading, var(--explitaeditor-text-sm--line-height));
  --tw-font-weight: var(--explitaeditor-font-weight-normal);
  font-weight: var(--explitaeditor-font-weight-normal);
  &:hover {
    @media (hover: hover) {
      background-color: var(--muted);
    }
  }
}
.explita-editor .table-popup-menu {
  display: flex;
  flex-wrap: wrap;
  gap: calc(var(--explitaeditor-spacing) * 3);
  border-bottom-right-radius: calc(var(--radius) - 2px);
  border-bottom-left-radius: calc(var(--radius) - 2px);
  background-color: var(--explitaeditor-color-white);
  padding: calc(var(--explitaeditor-spacing) * 2);
  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.explita-editor .table-popup-menu button {
  display: flex;
  align-items: center;
  gap: calc(var(--explitaeditor-spacing) * 1);
  border-radius: 0.25rem;
  padding-inline: calc(var(--explitaeditor-spacing) * 2);
  padding-block: calc(var(--explitaeditor-spacing) * 1);
  font-size: var(--explitaeditor-text-xs);
  line-height: var(--tw-leading, var(--explitaeditor-text-xs--line-height));
  color: var(--explitaeditor-color-black);
  &:hover {
    @media (hover: hover) {
      background-color: var(--explitaeditor-color-neutral-200);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--explitaeditor-color-neutral-200) 60%, transparent);
      }
    }
  }
  &:disabled {
    color: var(--explitaeditor-color-black);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--explitaeditor-color-black) 40%, transparent);
    }
  }
}
.explita-editor footer {
  bottom: calc(var(--explitaeditor-spacing) * 0);
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
  border-color: var(--explitaeditor-color-slate-300);
  background-color: var(--explitaeditor-color-slate-100);
  padding-inline: calc(var(--explitaeditor-spacing) * 5);
  padding-block: calc(var(--explitaeditor-spacing) * 0.5);
  font-size: var(--explitaeditor-text-xs);
  line-height: var(--tw-leading, var(--explitaeditor-text-xs--line-height));
  color: var(--explitaeditor-color-gray-700);
  -webkit-user-select: none;
  user-select: none;
  @media print {
    display: none;
  }
}
.explita-editor .tiptap {
  color: var(--explitaeditor-color-black);
  div[data-page-break] {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    margin: 1em 0;
    height: 2px;
    border: none;
  }
  div[data-page-break] hr {
    border: none;
    border-top: 4px dashed var(--page-break-line-color, #888);
    width: 100%;
    margin: 0;
  }
  div[data-page-break]::after {
    content: "Page Break";
    position: absolute;
    top: -10px;
    background: white;
    padding: 0 8px;
    font-size: 0.8em;
    color: var(--page-break-text-color, #555);
  }
  div[data-page-break].ProseMirror-selectednode hr {
    border-color: #93c5fd;
  }
  @media print {
    div[data-page-break] {
      break-before: always;
      page-break-before: always;
      padding-bottom: 0;
      margin-top: 0;
      margin-bottom: 0;
      border-width: 0;
    }
    div[data-page-break] hr {
      border-top: 0px;
    }
    div[data-page-break]::after {
      content: "";
    }
  }
  [data-pagination] {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  a {
    cursor: pointer;
    color: var(--explitaeditor-color-blue-600);
    &:hover {
      text-decoration-line: underline;
    }
  }
  img {
    display: block;
    height: auto;
    margin: 1.5rem 0;
    max-width: 100%;
    &.ProseMirror-selectednode {
      outline: 3px solid purple;
    }
  }
  table {
    border-collapse: collapse;
    margin: 0;
    overflow: hidden;
    table-layout: fixed;
    width: 100%;
    td, th {
      border: 1px solid black;
      box-sizing: border-box;
      min-width: 1em;
      padding: 6px 8px;
      position: relative;
      vertical-align: top;
      > * {
        margin-bottom: 0;
      }
    }
    th {
      background-color: #c7c7c7;
      font-weight: bold;
      text-align: left;
    }
    .selectedCell:after {
      background: #c7c7c861;
      content: "";
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      pointer-events: none;
      position: absolute;
      z-index: 2;
    }
    .column-resize-handle {
      background-color: purple;
      bottom: -2px;
      pointer-events: none;
      position: absolute;
      right: -2px;
      top: 0;
      width: 4px;
    }
  }
  .tableWrapper {
    margin: 1.5rem 0;
    overflow-x: auto;
  }
  &.resize-cursor {
    cursor: ew-resize;
    cursor: col-resize;
  }
  h1, h2, h3, h4, h5, h6 {
    line-height: 1.1;
    margin-top: 2.5rem;
    text-wrap: pretty;
  }
  h1, h2 {
    margin-top: 3.5rem;
    margin-bottom: 1.5rem;
  }
  h1 {
    font-size: 1.4rem;
  }
  h2 {
    font-size: 1.2rem;
  }
  h3 {
    font-size: 1.1rem;
  }
  h4, h5, h6 {
    font-size: 1rem;
  }
  ul, ol {
    padding: 0 1rem;
    margin: 1.25rem 1rem 1.25rem 0.4rem;
  }
  ul li {
    list-style-type: disc;
  }
  ol li {
    list-style-type: decimal;
  }
  ol li p, ul li p {
    margin-bottom: 0.25em;
  }
  ul[data-type="taskList"] {
    list-style: none;
    margin-left: 0;
    padding: 0;
    li {
      align-items: flex-start;
      display: flex;
      > label {
        flex: 0 0 auto;
        margin-right: 0.5rem;
        user-select: none;
      }
      > div {
        flex: 1 1 auto;
      }
    }
    input[type="checkbox"] {
      cursor: pointer;
    }
    ul[data-type="taskList"] {
      margin: 0;
    }
  }
  .page-break {
    height: 20px;
    width: 100%;
    border-top: 1px dashed #ccc;
    margin: 10px 0;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-space-x-reverse: 0;
      --tw-divide-y-reverse: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
    }
  }
}
